{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/main/Now.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport { getCurrentWeather, getWeatherData, selectWeatherCurrentData, selectWeatherData } from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LabelAndValue from \"../shared/LabelAndValue\";\nimport { getWindDirectionText } from \"../../helpers/app\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Now = () => {\n  _s();\n\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const weatherData = useSelector(selectWeatherCurrentData) || {};\n  const weatherDataArray = useMemo(() => {\n    const {\n      temp_c,\n      condition: {\n        text,\n        icon\n      } = {},\n      pressure_mb,\n      humidity,\n      wind_kph,\n      wind_dir,\n      cloud,\n      feelslike_c,\n      vis_km\n    } = weatherData;\n  }, [weatherData]);\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeatherData(searchValue));\n    }\n  }, [searchValue, dispatch]);\n  return /*#__PURE__*/_jsxDEV(WeatherCard, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 12\n        },\n        children: Array.from(Array(6)).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 4,\n          md: 4\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 64,\n          height: 64\n        },\n        variant: \"square\",\n        src: `https:${icon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Temperature\",\n        value: temp_c,\n        additionalValue: \" \\u2103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Real Feel\",\n        value: feelslike_c,\n        additionalValue: \" \\u2103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Pressure\",\n        value: pressure_mb,\n        additionalValue: \" MB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Humidity\",\n        value: humidity,\n        additionalValue: \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Wind speed\",\n        value: wind_kph,\n        additionalValue: \" k/h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Wind direction\",\n        value: getWindDirectionText(wind_dir)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Cloud\",\n        value: cloud\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Visibility\",\n        value: vis_km,\n        additionalValue: \" km\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Now, \"8Q8BEj5tXTLkNaHrqpe3RWlQyBg=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Now;\nexport default Now;\n\nvar _c;\n\n$RefreshReg$(_c, \"Now\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/main/Now.js"],"names":["React","useEffect","useMemo","useDispatch","useSelector","selectSearchValue","getCurrentWeather","getWeatherData","selectWeatherCurrentData","selectWeatherData","Box","CardActions","CardContent","Button","Typography","WeatherCard","Avatar","LabelAndValue","getWindDirectionText","Grid","Now","searchValue","dispatch","weatherData","weatherDataArray","temp_c","condition","text","icon","pressure_mb","humidity","wind_kph","wind_dir","cloud","feelslike_c","vis_km","xs","md","sm","Array","from","map","_","index","fontSize","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,gDAAlC;AACA,SACEC,iBADF,EAEEC,cAFF,EAGEC,wBAHF,EAIEC,iBAJF,QAKO,kCALP;AAMA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGjB,WAAW,CAACC,iBAAD,CAA/B;AACA,QAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,WAAW,GAAGnB,WAAW,CAACI,wBAAD,CAAX,IAAyC,EAA7D;AAEA,QAAMgB,gBAAgB,GAAGtB,OAAO,CAAC,MAAM;AACrC,UAAM;AACJuB,MAAAA,MADI;AAEJC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAiB,EAFxB;AAGJC,MAAAA,WAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,QALI;AAMJC,MAAAA,QANI;AAOJC,MAAAA,KAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUFZ,WAVJ;AAWD,GAZ+B,EAY7B,CAACA,WAAD,CAZ6B,CAAhC;AAcAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAJ,EAAiB;AACfC,MAAAA,QAAQ,CAACf,cAAc,CAACc,WAAD,CAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,EAAcC,QAAd,CAJM,CAAT;AAMA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE;AAAEc,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,EAAE,EAAE;AAAb,SAFX;AAGE,QAAA,OAAO,EAAE;AAAED,UAAAA,EAAE,EAAE,CAAN;AAASE,UAAAA,EAAE,EAAE,CAAb;AAAgBD,UAAAA,EAAE,EAAE;AAApB,SAHX;AAAA,kBAKGE,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqBE,GAArB,CAAyB,CAACC,CAAD,EAAIC,KAAJ,kBACxB,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE;AAA7B,WAAqCA,KAArC;AAAA;AAAA;AAAA;AAAA,gBADD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAkC,QAAA,KAAK,EAAC,gBAAxC;AAAyD,QAAA,YAAY,MAArE;AAAA,kBACGjB;AADH;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,MAAD;AACE,QAAA,EAAE,EAAE;AAAEkB,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SADN;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,GAAG,EAAG,SAAQlB,IAAK;AAHrB;AAAA;AAAA;AAAA;AAAA,cAbF,eAkBE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,KAAK,EAAEH,MAFT;AAGE,QAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,cAlBF,eAuBE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,KAAK,EAAES,WAFT;AAGE,QAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,cAvBF,eA4BE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,KAAK,EAAEL,WAFT;AAGE,QAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,cA5BF,eAiCE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,UAArB;AAAgC,QAAA,KAAK,EAAEC,QAAvC;AAAiD,QAAA,eAAe,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cAjCF,eAkCE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,KAAK,EAAEC,QAFT;AAGE,QAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,cAlCF,eAuCE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,gBADR;AAEE,QAAA,KAAK,EAAEb,oBAAoB,CAACc,QAAD;AAF7B;AAAA;AAAA;AAAA;AAAA,cAvCF,eA2CE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,OAArB;AAA6B,QAAA,KAAK,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cA3CF,eA4CE,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,KAAK,EAAEE,MAFT;AAGE,QAAA,eAAe,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CA/ED;;GAAMf,G;UACgBhB,W,EACHD,W,EACGC,W;;;KAHhBgB,G;AAiFN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport {\n  getCurrentWeather,\n  getWeatherData,\n  selectWeatherCurrentData,\n  selectWeatherData,\n} from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LabelAndValue from \"../shared/LabelAndValue\";\nimport { getWindDirectionText } from \"../../helpers/app\";\nimport Grid from \"@mui/material/Grid\";\n\nconst Now = () => {\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const weatherData = useSelector(selectWeatherCurrentData) || {};\n\n  const weatherDataArray = useMemo(() => {\n    const {\n      temp_c,\n      condition: { text, icon } = {},\n      pressure_mb,\n      humidity,\n      wind_kph,\n      wind_dir,\n      cloud,\n      feelslike_c,\n      vis_km,\n    } = weatherData;\n  }, [weatherData]);\n\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeatherData(searchValue));\n    }\n  }, [searchValue, dispatch]);\n\n  return (\n    <WeatherCard>\n      <CardContent>\n        <Grid\n          container\n          spacing={{ xs: 2, md: 3 }}\n          columns={{ xs: 4, sm: 8, md: 12 }}\n        >\n          {Array.from(Array(6)).map((_, index) => (\n            <Grid item xs={2} sm={4} md={4} key={index}></Grid>\n          ))}\n        </Grid>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {text}\n        </Typography>\n        <Avatar\n          sx={{ width: 64, height: 64 }}\n          variant=\"square\"\n          src={`https:${icon}`}\n        />\n        <LabelAndValue\n          label=\"Temperature\"\n          value={temp_c}\n          additionalValue=\" &#x2103;\"\n        />\n        <LabelAndValue\n          label=\"Real Feel\"\n          value={feelslike_c}\n          additionalValue=\" &#x2103;\"\n        />\n        <LabelAndValue\n          label=\"Pressure\"\n          value={pressure_mb}\n          additionalValue=\" MB\"\n        />\n        <LabelAndValue label=\"Humidity\" value={humidity} additionalValue=\" %\" />\n        <LabelAndValue\n          label=\"Wind speed\"\n          value={wind_kph}\n          additionalValue=\" k/h\"\n        />\n        <LabelAndValue\n          label=\"Wind direction\"\n          value={getWindDirectionText(wind_dir)}\n        />\n        <LabelAndValue label=\"Cloud\" value={cloud} />\n        <LabelAndValue\n          label=\"Visibility\"\n          value={vis_km}\n          additionalValue=\" km\"\n        />\n      </CardContent>\n    </WeatherCard>\n  );\n};\n\nexport default Now;\n"]},"metadata":{},"sourceType":"module"}