{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/main/Now.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport { getWeather, selectWeatherData } from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Now = () => {\n  _s();\n\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const {\n    location,\n    current: {\n      temp_c,\n      condition: {\n        text,\n        icon\n      } = {},\n      pressure_mb,\n      humidity,\n      wind_kph,\n      wind_dir,\n      cloud\n    } = {}\n  } = useSelector(selectWeatherData) || {};\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeather(searchValue));\n    }\n  }, [searchValue, dispatch]);\n  return /*#__PURE__*/_jsxDEV(WeatherCard, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 56,\n          height: 56\n        },\n        variant: \"square\",\n        src: `https:${icon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: [temp_c, \" \\u2103\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1.5\n        },\n        color: \"text.secondary\",\n        children: pressure_mb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Now, \"w6n0wb1cYzpia7iG4KCRqHw/ekY=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Now;\nexport default Now;\n\nvar _c;\n\n$RefreshReg$(_c, \"Now\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/main/Now.js"],"names":["React","useEffect","useDispatch","useSelector","selectSearchValue","getWeather","selectWeatherData","Box","CardActions","CardContent","Button","Typography","WeatherCard","Avatar","Now","searchValue","dispatch","location","current","temp_c","condition","text","icon","pressure_mb","humidity","wind_kph","wind_dir","cloud","fontSize","width","height","mb"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,gDAAlC;AACA,SACEC,UADF,EAEEC,iBAFF,QAGO,kCAHP;AAIA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGZ,WAAW,CAACC,iBAAD,CAA/B;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AACJe,IAAAA,QADI;AAEJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MADO;AAEPC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAiB,EAFrB;AAGPC,MAAAA,WAHO;AAIPC,MAAAA,QAJO;AAKPC,MAAAA,QALO;AAMPC,MAAAA,QANO;AAOPC,MAAAA;AAPO,QAQL;AAVA,MAWFxB,WAAW,CAACG,iBAAD,CAAX,IAAkC,EAXtC;AAaAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAJ,EAAiB;AACfC,MAAAA,QAAQ,CAACX,UAAU,CAACU,WAAD,CAAX,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,EAAcC,QAAd,CAJM,CAAT;AAMA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEY,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAkC,QAAA,KAAK,EAAC,gBAAxC;AAAyD,QAAA,YAAY,MAArE;AAAA,kBACGP;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,EAAE,EAAE;AAAEQ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SADN;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,GAAG,EAAG,SAAQR,IAAK;AAHrB;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA,mBACGH,MADH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEY,UAAAA,EAAE,EAAE;AAAN,SAAhB;AAA6B,QAAA,KAAK,EAAC,gBAAnC;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,mBAA6BC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3CD;;GAAMV,G;UACgBX,W,EACHD,W,EAYbC,W;;;KAdAW,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport {\n  getWeather,\n  selectWeatherData,\n} from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst Now = () => {\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const {\n    location,\n    current: {\n      temp_c,\n      condition: { text, icon } = {},\n      pressure_mb,\n      humidity,\n      wind_kph,\n      wind_dir,\n      cloud,\n    } = {},\n  } = useSelector(selectWeatherData) || {};\n\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeather(searchValue));\n    }\n  }, [searchValue, dispatch]);\n\n  return (\n    <WeatherCard>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {text}\n        </Typography>\n        <Avatar\n          sx={{ width: 56, height: 56 }}\n          variant=\"square\"\n          src={`https:${icon}`}\n        />\n        <Typography variant=\"h5\" component=\"div\">\n          {temp_c} &#x2103;\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {pressure_mb}\n        </Typography>\n        <Typography variant=\"body2\">{humidity}%</Typography>\n      </CardContent>\n    </WeatherCard>\n  );\n};\n\nexport default Now;\n"]},"metadata":{},"sourceType":"module"}