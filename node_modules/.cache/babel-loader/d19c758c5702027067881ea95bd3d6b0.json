{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport weatherApi from \"../../api/weather\";\nimport { initialState } from \"../initialState\";\nexport const getWeatherData = createAsyncThunk(\"weather/getWeatherData\", async searchValue => {\n  const response = await weatherApi.getWeatherData(searchValue.name); // The value we return becomes the `fulfilled` action payload\n\n  return response.data;\n});\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: initialState.weather,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getWeatherData.pending, state => {\n      state.loading = true;\n    }).addCase(getWeatherData.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(getWeatherData.rejected, (state, action) => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  incrementByAmount\n} = weatherSlice.actions;\nexport const selectWeatherData = state => state.weather.data;\nexport const selectWeatherCurrentData = state => state.weather.data.current;\nexport const selectWeatherForecastData = state => state.weather.data.forecast;\nexport const selectWeatherLocationData = state => state.weather.data.location;\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/redux/weather/weatherSlice.js"],"names":["createAsyncThunk","createSlice","weatherApi","initialState","getWeatherData","searchValue","response","name","data","weatherSlice","weather","reducers","extraReducers","builder","addCase","pending","state","loading","fulfilled","action","payload","rejected","incrementByAmount","actions","selectWeatherData","selectWeatherCurrentData","current","selectWeatherForecastData","forecast","selectWeatherLocationData","location","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,cAAc,GAAGJ,gBAAgB,CAC5C,wBAD4C,EAE5C,MAAOK,WAAP,IAAuB;AACrB,QAAMC,QAAQ,GAAG,MAAMJ,UAAU,CAACE,cAAX,CAA0BC,WAAW,CAACE,IAAtC,CAAvB,CADqB,CAErB;;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAN2C,CAAvC;AASP,OAAO,MAAMC,YAAY,GAAGR,WAAW,CAAC;AACtCM,EAAAA,IAAI,EAAE,SADgC;AAEtCJ,EAAAA,YAAY,EAAEA,YAAY,CAACO,OAFW;AAGtCC,EAAAA,QAAQ,EAAE,EAH4B;AAItCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWV,cAAc,CAACW,OAD1B,EACoCC,KAAD,IAAW;AAC1CA,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD,KAHH,EAIGH,OAJH,CAIWV,cAAc,CAACc,SAJ1B,EAIqC,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACpDH,MAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACAD,MAAAA,KAAK,CAACR,IAAN,GAAaW,MAAM,CAACC,OAApB;AACD,KAPH,EAQGN,OARH,CAQWV,cAAc,CAACiB,QAR1B,EAQoC,CAACL,KAAD,EAAQG,MAAR,KAAmB;AACnDH,MAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACD,KAVH;AAWD;AAhBqC,CAAD,CAAhC;AAmBP,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAwBb,YAAY,CAACc,OAA3C;AAEP,OAAO,MAAMC,iBAAiB,GAAIR,KAAD,IAAWA,KAAK,CAACN,OAAN,CAAcF,IAAnD;AACP,OAAO,MAAMiB,wBAAwB,GAAIT,KAAD,IAAWA,KAAK,CAACN,OAAN,CAAcF,IAAd,CAAmBkB,OAA/D;AACP,OAAO,MAAMC,yBAAyB,GAAIX,KAAD,IAAWA,KAAK,CAACN,OAAN,CAAcF,IAAd,CAAmBoB,QAAhE;AACP,OAAO,MAAMC,yBAAyB,GAAIb,KAAD,IAAWA,KAAK,CAACN,OAAN,CAAcF,IAAd,CAAmBsB,QAAhE;AAEP,eAAerB,YAAY,CAACsB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport weatherApi from \"../../api/weather\";\nimport { initialState } from \"../initialState\";\n\nexport const getWeatherData = createAsyncThunk(\n  \"weather/getWeatherData\",\n  async (searchValue) => {\n    const response = await weatherApi.getWeatherData(searchValue.name);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: initialState.weather,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getWeatherData.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getWeatherData.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(getWeatherData.rejected, (state, action) => {\n        state.loading = false;\n      });\n  },\n});\n\nexport const { incrementByAmount } = weatherSlice.actions;\n\nexport const selectWeatherData = (state) => state.weather.data;\nexport const selectWeatherCurrentData = (state) => state.weather.data.current;\nexport const selectWeatherForecastData = (state) => state.weather.data.forecast;\nexport const selectWeatherLocationData = (state) => state.weather.data.location;\n\nexport default weatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}