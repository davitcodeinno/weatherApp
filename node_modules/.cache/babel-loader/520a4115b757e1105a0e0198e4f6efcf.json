{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/main/Now.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport { getCurrentWeather, getWeatherData, selectWeatherCurrentData, selectWeatherData } from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LabelAndValue from \"../shared/LabelAndValue\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Now = () => {\n  _s();\n\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const {\n    temp_c,\n    condition: {\n      text,\n      icon\n    } = {},\n    pressure_mb,\n    humidity,\n    wind_kph,\n    wind_dir,\n    cloud\n  } = useSelector(selectWeatherCurrentData) || {};\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeatherData(searchValue));\n    }\n  }, [searchValue, dispatch]);\n  const asd = \"&#x2103;\";\n  return /*#__PURE__*/_jsxDEV(WeatherCard, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [asd, /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 64,\n          height: 64\n        },\n        variant: \"square\",\n        src: `https:${icon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LabelAndValue, {\n        label: \"Temperature\",\n        value: temp_c + \" \" + \"&#x2103;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: [temp_c, \" \\u2103\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1.5\n        },\n        color: \"text.secondary\",\n        children: pressure_mb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Now, \"w6n0wb1cYzpia7iG4KCRqHw/ekY=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Now;\nexport default Now;\n\nvar _c;\n\n$RefreshReg$(_c, \"Now\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/main/Now.js"],"names":["React","useEffect","useDispatch","useSelector","selectSearchValue","getCurrentWeather","getWeatherData","selectWeatherCurrentData","selectWeatherData","Box","CardActions","CardContent","Button","Typography","WeatherCard","Avatar","LabelAndValue","Now","searchValue","dispatch","temp_c","condition","text","icon","pressure_mb","humidity","wind_kph","wind_dir","cloud","asd","fontSize","width","height","mb"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,gDAAlC;AACA,SACEC,iBADF,EAEEC,cAFF,EAGEC,wBAHF,EAIEC,iBAJF,QAKO,kCALP;AAMA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGf,WAAW,CAACC,iBAAD,CAA/B;AACA,QAAMe,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AACJkB,IAAAA,MADI;AAEJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiB,EAFxB;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA;AAPI,MAQFzB,WAAW,CAACI,wBAAD,CAAX,IAAyC,EAR7C;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,WAAJ,EAAiB;AACfC,MAAAA,QAAQ,CAACb,cAAc,CAACY,WAAD,CAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,EAAcC,QAAd,CAJM,CAAT;AAMA,QAAMU,GAAG,GAAG,UAAZ;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,WAAD;AAAA,iBACGA,GADH,eAEE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAkC,QAAA,KAAK,EAAC,gBAAxC;AAAyD,QAAA,YAAY,MAArE;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AACE,QAAA,EAAE,EAAE;AAAES,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SADN;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,GAAG,EAAG,SAAQT,IAAK;AAHrB;AAAA;AAAA;AAAA;AAAA,cALF,eAUE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,aAArB;AAAmC,QAAA,KAAK,EAAEH,MAAM,GAAG,GAAT,GAAe;AAAzD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA,mBACGA,MADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEa,UAAAA,EAAE,EAAE;AAAN,SAAhB;AAA6B,QAAA,KAAK,EAAC,gBAAnC;AAAA,kBACGT;AADH;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,mBAA6BC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5CD;;GAAMR,G;UACgBd,W,EACHD,W,EASbC,W;;;KAXAc,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport {\n  getCurrentWeather,\n  getWeatherData,\n  selectWeatherCurrentData,\n  selectWeatherData,\n} from \"../../redux/weather/weatherSlice\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport WeatherCard from \"../shared/WeatherCard\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LabelAndValue from \"../shared/LabelAndValue\";\n\nconst Now = () => {\n  const searchValue = useSelector(selectSearchValue);\n  const dispatch = useDispatch();\n  const {\n    temp_c,\n    condition: { text, icon } = {},\n    pressure_mb,\n    humidity,\n    wind_kph,\n    wind_dir,\n    cloud,\n  } = useSelector(selectWeatherCurrentData) || {};\n\n  useEffect(() => {\n    if (searchValue) {\n      dispatch(getWeatherData(searchValue));\n    }\n  }, [searchValue, dispatch]);\n\n  const asd = \"&#x2103;\";\n\n  return (\n    <WeatherCard>\n      <CardContent>\n        {asd}\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {text}\n        </Typography>\n        <Avatar\n          sx={{ width: 64, height: 64 }}\n          variant=\"square\"\n          src={`https:${icon}`}\n        />\n        <LabelAndValue label=\"Temperature\" value={temp_c + \" \" + \"&#x2103;\"} />\n        <Typography variant=\"h5\" component=\"div\">\n          {temp_c} &#x2103;\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {pressure_mb}\n        </Typography>\n        <Typography variant=\"body2\">{humidity}%</Typography>\n      </CardContent>\n    </WeatherCard>\n  );\n};\n\nexport default Now;\n"]},"metadata":{},"sourceType":"module"}