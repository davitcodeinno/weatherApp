{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"../initialState\";\nexport const snackbarSlice = createSlice({\n  name: \"snackbar\",\n  initialState: initialState.snackbar,\n  reducers: {\n    setSnackbarData: (state, {\n      payload: {\n        message = \"\",\n        severity = \"\",\n        open = false\n      }\n    }) => {\n      console.log(message, severity, open);\n      state = {\n        message,\n        severity,\n        open\n      };\n    }\n  }\n});\nexport const {\n  setSnackbarData\n} = snackbarSlice.actions;\nexport const selectSnackbarData = state => state.snackbar;\nexport default snackbarSlice.reducer;","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/redux/snackbar/snackbarSlice.js"],"names":["createSlice","initialState","snackbarSlice","name","snackbar","reducers","setSnackbarData","state","payload","message","severity","open","console","log","actions","selectSnackbarData","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC;AACvCG,EAAAA,IAAI,EAAE,UADiC;AAEvCF,EAAAA,YAAY,EAAEA,YAAY,CAACG,QAFY;AAGvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,CACfC,KADe,EAEf;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,GAAG,EAAZ;AAAgBC,QAAAA,QAAQ,GAAG,EAA3B;AAA+BC,QAAAA,IAAI,GAAG;AAAtC;AAAX,KAFe,KAGZ;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,QAArB,EAA+BC,IAA/B;AACAJ,MAAAA,KAAK,GAAG;AACNE,QAAAA,OADM;AAENC,QAAAA,QAFM;AAGNC,QAAAA;AAHM,OAAR;AAKD;AAXO;AAH6B,CAAD,CAAjC;AAkBP,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAsBJ,aAAa,CAACY,OAA1C;AAEP,OAAO,MAAMC,kBAAkB,GAAIR,KAAD,IAAWA,KAAK,CAACH,QAA5C;AAEP,eAAeF,aAAa,CAACc,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"../initialState\";\n\nexport const snackbarSlice = createSlice({\n  name: \"snackbar\",\n  initialState: initialState.snackbar,\n  reducers: {\n    setSnackbarData: (\n      state,\n      { payload: { message = \"\", severity = \"\", open = false } }\n    ) => {\n      console.log(message, severity, open);\n      state = {\n        message,\n        severity,\n        open,\n      };\n    },\n  },\n});\n\nexport const { setSnackbarData } = snackbarSlice.actions;\n\nexport const selectSnackbarData = (state) => state.snackbar;\n\nexport default snackbarSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}