{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/header/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport { searchLocation, selectIsLoading, selectOptions } from \"../../redux/weather/weatherSlice\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst SearchWrapper = styled(\"div\")(({\n  theme\n}) => ({\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginLeft: 0,\n  width: \"100%\"\n}));\nconst SearchIconWrapper = styled(\"div\")(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 1),\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n}));\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    paddingRight: 30\n  }\n}));\nconst StyledCircularProgress = styled(CircularProgress)(() => ({\n  position: \"absolute\",\n  right: 30,\n  top: 20\n}));\nexport default function Seacrh() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false); // const [options, setOptions] = React.useState([]);\n  // const loading = open && options.length === 0;\n\n  const [value, setValue] = useState(\"\");\n  const loading = useSelector(selectIsLoading);\n  const options = useSelector(selectOptions);\n  useEffect(() => {\n    if (value.length > 4) {\n      dispatch(searchLocation(value));\n    }\n  }, [value, dispatch]); // React.useEffect(() => {\n  //   let active = true;\n  //   if (!loading) {\n  //     return undefined;\n  //   }\n  //   (async () => {\n  //     await sleep(3000); // For demo purposes.\n  //     if (active) {\n  //       setOptions([...topFilms]);\n  //     }\n  //   })();\n  //   return () => {\n  //     active = false;\n  //   };\n  // }, [loading]);\n  // React.useEffect(() => {\n  //   if (!open) {\n  //     setOptions([]);\n  //   }\n  // }, [open]);\n\n  const onInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    disableClearable: true,\n    freeSolo: true,\n    sx: {\n      width: 300\n    },\n    open: options.length // onOpen={() => {\n    //   setOpen(true);\n    // }}\n    // onClose={() => {\n    //   setOpen(false);\n    // }}\n    ,\n    isOptionEqualToValue: (option, value) => option.title === value.title,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => {\n      const {\n        InputLabelProps,\n        InputProps,\n        ...rest\n      } = params;\n      return /*#__PURE__*/_jsxDEV(SearchWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, { ...params.InputProps,\n          ...rest,\n          value: value,\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(StyledCircularProgress, {\n          color: \"inherit\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n} // Top films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(Seacrh, \"6jLiVbgzUsi0QW0JNpWW4qoeFts=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Seacrh;\nconst topFilms = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"LÃ©on: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Seacrh\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/header/Search.js"],"names":["React","useEffect","useState","styled","alpha","TextField","Autocomplete","CircularProgress","SearchIcon","InputBase","useDispatch","searchLocation","selectIsLoading","selectOptions","useSelector","sleep","delay","Promise","resolve","setTimeout","SearchWrapper","theme","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","SearchIconWrapper","padding","spacing","position","pointerEvents","display","alignItems","justifyContent","StyledInputBase","color","paddingLeft","paddingRight","StyledCircularProgress","right","top","Seacrh","dispatch","open","setOpen","value","setValue","loading","options","length","onInputChange","e","target","option","title","name","params","InputLabelProps","InputProps","rest","topFilms","year"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  searchLocation,\n  selectIsLoading,\n  selectOptions,\n} from \"../../redux/weather/weatherSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst SearchWrapper = styled(\"div\")(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(1, 1),\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    paddingRight: 30,\n  },\n}));\n\nconst StyledCircularProgress = styled(CircularProgress)(() => ({\n  position: \"absolute\",\n  right: 30,\n  top: 20,\n}));\n\nexport default function Seacrh() {\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  // const [options, setOptions] = React.useState([]);\n  // const loading = open && options.length === 0;\n  const [value, setValue] = useState(\"\");\n  const loading = useSelector(selectIsLoading);\n  const options = useSelector(selectOptions);\n\n  useEffect(() => {\n    if (value.length > 4) {\n      dispatch(searchLocation(value));\n    }\n  }, [value, dispatch]);\n\n  // React.useEffect(() => {\n  //   let active = true;\n\n  //   if (!loading) {\n  //     return undefined;\n  //   }\n\n  //   (async () => {\n  //     await sleep(3000); // For demo purposes.\n\n  //     if (active) {\n  //       setOptions([...topFilms]);\n  //     }\n  //   })();\n\n  //   return () => {\n  //     active = false;\n  //   };\n  // }, [loading]);\n\n  // React.useEffect(() => {\n  //   if (!open) {\n  //     setOptions([]);\n  //   }\n  // }, [open]);\n\n  const onInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Autocomplete\n      disableClearable\n      freeSolo\n      sx={{ width: 300 }}\n      open={options.length}\n      // onOpen={() => {\n      //   setOpen(true);\n      // }}\n      // onClose={() => {\n      //   setOpen(false);\n      // }}\n      isOptionEqualToValue={(option, value) => option.title === value.title}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      renderInput={(params) => {\n        const { InputLabelProps, InputProps, ...rest } = params;\n        return (\n          <SearchWrapper>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              {...params.InputProps}\n              {...rest}\n              value={value}\n              onChange={onInputChange}\n            />\n            {loading ? (\n              <StyledCircularProgress color=\"inherit\" size={20} />\n            ) : null}\n          </SearchWrapper>\n        );\n      }}\n    />\n  );\n}\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\nconst topFilms = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  {\n    title: \"The Lord of the Rings: The Return of the King\",\n    year: 2003,\n  },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  {\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    year: 2001,\n  },\n  {\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\n    year: 1980,\n  },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  {\n    title: \"The Lord of the Rings: The Two Towers\",\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  {\n    title: \"Star Wars: Episode IV - A New Hope\",\n    year: 1977,\n  },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"LÃ©on: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n];\n"]},"metadata":{},"sourceType":"module"}