{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from \"../../constants/api\";\n\nconst createAxios = (headers = {}) => {\n  const newAxios = axios.create({\n    baseURL: BASE_URL\n  }); // newAxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\n  newAxios.defaults.headers = { ...newAxios.defaults.headers,\n    \"Content-Type\": \"application/json\",\n    ...headers\n  };\n  newAxios.interceptors.request.use(config => {\n    const newConfig = { ...config\n    };\n    newConfig.url = newConfig.baseURL + newConfig.url;\n    return newConfig;\n  }, error => Promise.reject(error));\n  newAxios.interceptors.response.use(response => response, error => Promise.reject(error));\n  return newAxios;\n};\n\nconst Axios = createAxios();\nexport default Axios;","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/api/main/mainApi.js"],"names":["axios","BASE_URL","createAxios","headers","newAxios","create","baseURL","defaults","interceptors","request","use","config","newConfig","url","error","Promise","reject","response","Axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB;AACpC,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5BC,IAAAA,OAAO,EAAEL;AADmB,GAAb,CAAjB,CADoC,CAKpC;;AACAG,EAAAA,QAAQ,CAACG,QAAT,CAAkBJ,OAAlB,GAA4B,EAC1B,GAAGC,QAAQ,CAACG,QAAT,CAAkBJ,OADK;AAE1B,oBAAgB,kBAFU;AAG1B,OAAGA;AAHuB,GAA5B;AAMAC,EAAAA,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACGC,MAAD,IAAY;AACV,UAAMC,SAAS,GAAG,EAAE,GAAGD;AAAL,KAAlB;AACAC,IAAAA,SAAS,CAACC,GAAV,GAAgBD,SAAS,CAACN,OAAV,GAAoBM,SAAS,CAACC,GAA9C;AACA,WAAOD,SAAP;AACD,GALH,EAMGE,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CANb;AASAV,EAAAA,QAAQ,CAACI,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CACGO,QAAD,IAAcA,QADhB,EAEGH,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAFb;AAKA,SAAOV,QAAP;AACD,CA3BD;;AA6BA,MAAMc,KAAK,GAAGhB,WAAW,EAAzB;AAEA,eAAegB,KAAf","sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from \"../../constants/api\";\n\nconst createAxios = (headers = {}) => {\n  const newAxios = axios.create({\n    baseURL: BASE_URL,\n  });\n\n  // newAxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n  newAxios.defaults.headers = {\n    ...newAxios.defaults.headers,\n    \"Content-Type\": \"application/json\",\n    ...headers,\n  };\n\n  newAxios.interceptors.request.use(\n    (config) => {\n      const newConfig = { ...config };\n      newConfig.url = newConfig.baseURL + newConfig.url;\n      return newConfig;\n    },\n    (error) => Promise.reject(error)\n  );\n\n  newAxios.interceptors.response.use(\n    (response) => response,\n    (error) => Promise.reject(error)\n  );\n\n  return newAxios;\n};\n\nconst Axios = createAxios();\n\nexport default Axios;\n"]},"metadata":{},"sourceType":"module"}