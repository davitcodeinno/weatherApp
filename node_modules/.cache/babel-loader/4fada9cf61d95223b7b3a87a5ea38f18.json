{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/header/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport { searchLocation, selectIsLoading, selectData } from \"../../redux/locationSearch/locationSearchSlice\";\nimport { useSelector } from \"react-redux\";\nimport debounce from \"lodash/debounce\";\nimport { selectSearchText, selectSearchValue, setSearchText, setSearchValue } from \"../../redux/locationSearch/locationSearchSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchWrapper = styled(\"div\")(({\n  theme\n}) => ({\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginLeft: 0,\n  width: \"100%\"\n}));\nconst SearchIconWrapper = styled(\"div\")(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 1),\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n}));\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    paddingRight: 30\n  }\n}));\nconst StyledCircularProgress = styled(CircularProgress)(() => ({\n  position: \"absolute\",\n  right: 30,\n  top: 20\n}));\nexport default function Seacrh() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  console.log(open);\n  const [debouncedSearchValue, setdebouncedSearchValue] = useState(\"\");\n  const loading = useSelector(selectIsLoading);\n  const options = useSelector(selectData);\n  console.log(options);\n  const searchText = useSelector(selectSearchText);\n  const value = useSelector(selectSearchValue);\n  const updateDebouncedSearch = useCallback(debounce(setdebouncedSearchValue, 300), [setdebouncedSearchValue]);\n  useEffect(() => {\n    updateDebouncedSearch(searchText);\n  }, [searchText, updateDebouncedSearch]);\n  useEffect(() => {\n    if (debouncedSearchValue) {\n      dispatch(searchLocation(debouncedSearchValue));\n    }\n  }, [debouncedSearchValue, dispatch]);\n\n  const onInputChange = e => {\n    if (value) {\n      dispatch(setSearchValue(null));\n    }\n\n    dispatch(setSearchText(e.target.value));\n  };\n\n  const onValueChange = (e, o) => {\n    dispatch(setSearchValue(o));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: onValueChange,\n    disableClearable: true,\n    freeSolo: true,\n    sx: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    } // filterOptions={(o, s) => {\n    //   return o;\n    // }}\n    ,\n    isOptionEqualToValue: (option, value) => option.id === value.id,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => {\n      const {\n        InputLabelProps,\n        InputProps,\n        ...rest\n      } = params;\n      return /*#__PURE__*/_jsxDEV(SearchWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, { ...params.InputProps,\n          ...rest,\n          placeholder: \"Search\",\n          value: searchText,\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(StyledCircularProgress, {\n          color: \"inherit\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Seacrh, \"wjqPj2Y8PoNvysAJVpwujyVYyZY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Seacrh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Seacrh\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/header/Search.js"],"names":["React","useCallback","useEffect","useState","styled","alpha","TextField","Autocomplete","CircularProgress","SearchIcon","InputBase","useDispatch","searchLocation","selectIsLoading","selectData","useSelector","debounce","selectSearchText","selectSearchValue","setSearchText","setSearchValue","SearchWrapper","theme","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","SearchIconWrapper","padding","spacing","position","pointerEvents","display","alignItems","justifyContent","StyledInputBase","color","paddingLeft","paddingRight","StyledCircularProgress","right","top","Seacrh","dispatch","open","setOpen","console","log","debouncedSearchValue","setdebouncedSearchValue","loading","options","searchText","value","updateDebouncedSearch","onInputChange","e","target","onValueChange","o","option","id","name","params","InputLabelProps","InputProps","rest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,sBAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,cADF,EAEEC,eAFF,EAGEC,UAHF,QAIO,gDAJP;AAKA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,gDALP;;AAOA,MAAMC,aAAa,GAAGjB,MAAM,CAAC,KAAD,CAAN,CAAc,CAAC;AAAEkB,EAAAA;AAAF,CAAD,MAAgB;AAClDC,EAAAA,YAAY,EAAED,KAAK,CAACE,KAAN,CAAYD,YADwB;AAElDE,EAAAA,eAAe,EAAEpB,KAAK,CAACiB,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAF4B;AAGlD,aAAW;AACTH,IAAAA,eAAe,EAAEpB,KAAK,CAACiB,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADb,GAHuC;AAMlDC,EAAAA,UAAU,EAAE,CANsC;AAOlDC,EAAAA,KAAK,EAAE;AAP2C,CAAhB,CAAd,CAAtB;AAUA,MAAMC,iBAAiB,GAAG3B,MAAM,CAAC,KAAD,CAAN,CAAc,CAAC;AAAEkB,EAAAA;AAAF,CAAD,MAAgB;AACtDU,EAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAD6C;AAEtDC,EAAAA,QAAQ,EAAE,UAF4C;AAGtDC,EAAAA,aAAa,EAAE,MAHuC;AAItDC,EAAAA,OAAO,EAAE,MAJ6C;AAKtDC,EAAAA,UAAU,EAAE,QAL0C;AAMtDC,EAAAA,cAAc,EAAE;AANsC,CAAhB,CAAd,CAA1B;AASA,MAAMC,eAAe,GAAGnC,MAAM,CAACM,SAAD,CAAN,CAAkB,CAAC;AAAEY,EAAAA;AAAF,CAAD,MAAgB;AACxDkB,EAAAA,KAAK,EAAE,SADiD;AAExD,2BAAyB;AACvBR,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADc;AAEvBQ,IAAAA,WAAW,EAAG,cAAanB,KAAK,CAACW,OAAN,CAAc,CAAd,CAAiB,GAFrB;AAGvBS,IAAAA,YAAY,EAAE;AAHS;AAF+B,CAAhB,CAAlB,CAAxB;AASA,MAAMC,sBAAsB,GAAGvC,MAAM,CAACI,gBAAD,CAAN,CAAyB,OAAO;AAC7D0B,EAAAA,QAAQ,EAAE,UADmD;AAE7DU,EAAAA,KAAK,EAAE,EAFsD;AAG7DC,EAAAA,GAAG,EAAE;AAHwD,CAAP,CAAzB,CAA/B;AAMA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGpC,WAAW,EAA5B;AACA,QAAM,CAACqC,IAAD,EAAOC,OAAP,IAAkB9C,QAAQ,CAAC,KAAD,CAAhC;AACA+C,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM,CAACI,oBAAD,EAAuBC,uBAAvB,IAAkDlD,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAMmD,OAAO,GAAGvC,WAAW,CAACF,eAAD,CAA3B;AACA,QAAM0C,OAAO,GAAGxC,WAAW,CAACD,UAAD,CAA3B;AACAoC,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,QAAMC,UAAU,GAAGzC,WAAW,CAACE,gBAAD,CAA9B;AACA,QAAMwC,KAAK,GAAG1C,WAAW,CAACG,iBAAD,CAAzB;AAEA,QAAMwC,qBAAqB,GAAGzD,WAAW,CACvCe,QAAQ,CAACqC,uBAAD,EAA0B,GAA1B,CAD+B,EAEvC,CAACA,uBAAD,CAFuC,CAAzC;AAKAnD,EAAAA,SAAS,CAAC,MAAM;AACdwD,IAAAA,qBAAqB,CAACF,UAAD,CAArB;AACD,GAFQ,EAEN,CAACA,UAAD,EAAaE,qBAAb,CAFM,CAAT;AAIAxD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkD,oBAAJ,EAA0B;AACxBL,MAAAA,QAAQ,CAACnC,cAAc,CAACwC,oBAAD,CAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,oBAAD,EAAuBL,QAAvB,CAJM,CAAT;;AAMA,QAAMY,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIH,KAAJ,EAAW;AACTV,MAAAA,QAAQ,CAAC3B,cAAc,CAAC,IAAD,CAAf,CAAR;AACD;;AACD2B,IAAAA,QAAQ,CAAC5B,aAAa,CAACyC,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAd,CAAR;AACD,GALD;;AAOA,QAAMK,aAAa,GAAG,CAACF,CAAD,EAAIG,CAAJ,KAAU;AAC9BhB,IAAAA,QAAQ,CAAC3B,cAAc,CAAC2C,CAAD,CAAf,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,QAAQ,EAAEK,aAFZ;AAGE,IAAA,gBAAgB,MAHlB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,EAAE,EAAE;AAAEhC,MAAAA,KAAK,EAAE;AAAT,KALN;AAME,IAAA,IAAI,EAAEkB,IANR;AAOE,IAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KATH;AAUE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAZH,CAaE;AACA;AACA;AAfF;AAgBE,IAAA,oBAAoB,EAAE,CAACe,MAAD,EAASP,KAAT,KAAmBO,MAAM,CAACC,EAAP,KAAcR,KAAK,CAACQ,EAhB/D;AAiBE,IAAA,cAAc,EAAGD,MAAD,IAAYA,MAAM,CAACE,IAjBrC;AAkBE,IAAA,OAAO,EAAEX,OAlBX;AAmBE,IAAA,OAAO,EAAED,OAnBX;AAoBE,IAAA,WAAW,EAAGa,MAAD,IAAY;AACvB,YAAM;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA,UAAnB;AAA+B,WAAGC;AAAlC,UAA2CH,MAAjD;AACA,0BACE,QAAC,aAAD;AAAA,gCACE,QAAC,iBAAD;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,eAAD,OACMA,MAAM,CAACE,UADb;AAAA,aAEMC,IAFN;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,KAAK,EAAEd,UAJT;AAKE,UAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,gBAJF,EAWGL,OAAO,gBACN,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,SAA9B;AAAwC,UAAA,IAAI,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADM,GAEJ,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD;AAvCH;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAhFuBR,M;UACLnC,W,EAIDI,W,EACAA,W,EAEGA,W,EACLA,W;;;KATQ+B,M","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  searchLocation,\n  selectIsLoading,\n  selectData,\n} from \"../../redux/locationSearch/locationSearchSlice\";\nimport { useSelector } from \"react-redux\";\nimport debounce from \"lodash/debounce\";\nimport {\n  selectSearchText,\n  selectSearchValue,\n  setSearchText,\n  setSearchValue,\n} from \"../../redux/locationSearch/locationSearchSlice\";\n\nconst SearchWrapper = styled(\"div\")(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(1, 1),\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    paddingRight: 30,\n  },\n}));\n\nconst StyledCircularProgress = styled(CircularProgress)(() => ({\n  position: \"absolute\",\n  right: 30,\n  top: 20,\n}));\n\nexport default function Seacrh() {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  console.log(open);\n  const [debouncedSearchValue, setdebouncedSearchValue] = useState(\"\");\n  const loading = useSelector(selectIsLoading);\n  const options = useSelector(selectData);\n  console.log(options);\n  const searchText = useSelector(selectSearchText);\n  const value = useSelector(selectSearchValue);\n\n  const updateDebouncedSearch = useCallback(\n    debounce(setdebouncedSearchValue, 300),\n    [setdebouncedSearchValue]\n  );\n\n  useEffect(() => {\n    updateDebouncedSearch(searchText);\n  }, [searchText, updateDebouncedSearch]);\n\n  useEffect(() => {\n    if (debouncedSearchValue) {\n      dispatch(searchLocation(debouncedSearchValue));\n    }\n  }, [debouncedSearchValue, dispatch]);\n\n  const onInputChange = (e) => {\n    if (value) {\n      dispatch(setSearchValue(null));\n    }\n    dispatch(setSearchText(e.target.value));\n  };\n\n  const onValueChange = (e, o) => {\n    dispatch(setSearchValue(o));\n  };\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={onValueChange}\n      disableClearable\n      freeSolo\n      sx={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      // filterOptions={(o, s) => {\n      //   return o;\n      // }}\n      isOptionEqualToValue={(option, value) => option.id === value.id}\n      getOptionLabel={(option) => option.name}\n      options={options}\n      loading={loading}\n      renderInput={(params) => {\n        const { InputLabelProps, InputProps, ...rest } = params;\n        return (\n          <SearchWrapper>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              {...params.InputProps}\n              {...rest}\n              placeholder=\"Search\"\n              value={searchText}\n              onChange={onInputChange}\n            />\n            {loading ? (\n              <StyledCircularProgress color=\"inherit\" size={20} />\n            ) : null}\n          </SearchWrapper>\n        );\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}