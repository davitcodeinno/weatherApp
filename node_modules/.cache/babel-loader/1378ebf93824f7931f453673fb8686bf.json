{"ast":null,"code":"var _jsxFileName = \"/home/davit/Documents/work/weather/src/components/header/Search.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Asynchronous() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"asynchronous-demo\",\n    sx: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    isOptionEqualToValue: (option, value) => option.title === value.title,\n    getOptionLabel: option => option.title,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Asynchronous\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // Top films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(Asynchronous, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = Asynchronous;\nconst topFilms = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"LÃ©on: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Asynchronous\");","map":{"version":3,"sources":["/home/davit/Documents/work/weather/src/components/header/Search.js"],"names":["React","TextField","Autocomplete","CircularProgress","sleep","delay","Promise","resolve","setTimeout","Asynchronous","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","undefined","topFilms","width","option","value","title","params","InputProps","endAdornment","year"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Asynchronous() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      sx={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      isOptionEqualToValue={(option, value) => option.title === value.title}\n      getOptionLabel={(option) => option.title}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Asynchronous\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\nconst topFilms = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  {\n    title: \"The Lord of the Rings: The Return of the King\",\n    year: 2003,\n  },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  {\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    year: 2001,\n  },\n  {\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\n    year: 1980,\n  },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  {\n    title: \"The Lord of the Rings: The Two Towers\",\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  {\n    title: \"Star Wars: Episode IV - A New Hope\",\n    year: 1977,\n  },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"LÃ©on: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n];\n"]},"metadata":{},"sourceType":"module"}